<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xx.webframework.mapper.SysLogDAO">
  <resultMap id="BaseResultMap" type="com.xx.webframework.domain.SysLog">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
    <result column="referer" jdbcType="VARCHAR" property="referer" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xx.webframework.domain.SysLogWithBLOBs">
    <result column="get" jdbcType="LONGVARCHAR" property="get" />
    <result column="post" jdbcType="LONGVARCHAR" property="post" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, `level`, `path`, message, ip, user_agent, referer, user_id, username, create_time
  </sql>
  <sql id="Blob_Column_List">
    `get`, post
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xx.webframework.domain.SysLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xx.webframework.domain.SysLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xx.webframework.domain.SysLogExample">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="log_id" keyProperty="logId" parameterType="com.xx.webframework.domain.SysLogWithBLOBs" useGeneratedKeys="true">
    insert into sys_log (`level`, `path`, message, 
      ip, user_agent, referer, 
      user_id, username, create_time, 
      `get`, post)
    values (#{level,jdbcType=TINYINT}, #{path,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, #{referer,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{get,jdbcType=LONGVARCHAR}, #{post,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="log_id" keyProperty="logId" parameterType="com.xx.webframework.domain.SysLogWithBLOBs" useGeneratedKeys="true">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="level != null">
        `level`,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="userAgent != null">
        user_agent,
      </if>
      <if test="referer != null">
        referer,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="get != null">
        `get`,
      </if>
      <if test="post != null">
        post,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="referer != null">
        #{referer,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="get != null">
        #{get,jdbcType=LONGVARCHAR},
      </if>
      <if test="post != null">
        #{post,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xx.webframework.domain.SysLogExample" resultType="java.lang.Long">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.path != null">
        `path` = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.userAgent != null">
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.referer != null">
        referer = #{record.referer,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.get != null">
        `get` = #{record.get,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=TINYINT},
      `path` = #{record.path,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      referer = #{record.referer,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      `get` = #{record.get,jdbcType=LONGVARCHAR},
      post = #{record.post,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=TINYINT},
      `path` = #{record.path,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      referer = #{record.referer,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xx.webframework.domain.SysLogWithBLOBs">
    update sys_log
    <set>
      <if test="level != null">
        `level` = #{level,jdbcType=TINYINT},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="referer != null">
        referer = #{referer,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="get != null">
        `get` = #{get,jdbcType=LONGVARCHAR},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xx.webframework.domain.SysLogWithBLOBs">
    update sys_log
    set `level` = #{level,jdbcType=TINYINT},
      `path` = #{path,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      referer = #{referer,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `get` = #{get,jdbcType=LONGVARCHAR},
      post = #{post,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xx.webframework.domain.SysLog">
    update sys_log
    set `level` = #{level,jdbcType=TINYINT},
      `path` = #{path,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      referer = #{referer,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>